[{"C:\\Users\\gotoo\\Documents\\react-app\\tango react node\\tango\\src\\index.js":"1","C:\\Users\\gotoo\\Documents\\react-app\\tango react node\\tango\\src\\App.js":"2","C:\\Users\\gotoo\\Documents\\react-app\\tango react node\\tango\\src\\Components\\Theme\\Themes.js":"3","C:\\Users\\gotoo\\Documents\\react-app\\tango react node\\tango\\src\\Components\\Header\\Header.js":"4","C:\\Users\\gotoo\\Documents\\react-app\\tango react node\\tango\\src\\Components\\Home\\Home.js":"5","C:\\Users\\gotoo\\Documents\\react-app\\tango react node\\tango\\src\\Components\\Theme\\globalStyles.js":"6","C:\\Users\\gotoo\\Documents\\react-app\\tango react node\\tango\\src\\Components\\Quez\\Quez.js":"7","C:\\Users\\gotoo\\Documents\\react-app\\tango react node\\tango\\src\\Components\\Menu\\Menu.js":"8","C:\\Users\\gotoo\\Documents\\react-app\\tango react node\\tango\\src\\Components\\Indicater.js":"9","C:\\Users\\gotoo\\Documents\\react-app\\tango react node\\tango\\src\\Components\\Home\\Homestatus.js":"10","C:\\Users\\gotoo\\Documents\\react-app\\tango react node\\tango\\src\\Components\\Statusbox.js":"11","C:\\Users\\gotoo\\Documents\\react-app\\tango react node\\tango\\src\\Components\\Home\\Section.js":"12","C:\\Users\\gotoo\\Documents\\react-app\\tango react node\\tango\\src\\Components\\Quez\\Result.js":"13","C:\\Users\\gotoo\\Documents\\react-app\\tango react node\\tango\\src\\services\\tango.service.js":"14","C:\\Users\\gotoo\\Documents\\react-app\\tango react node\\tango\\src\\http-common.js":"15"},{"size":190,"mtime":1659676650753,"results":"16","hashOfConfig":"17"},{"size":1276,"mtime":1660391210040,"results":"18","hashOfConfig":"17"},{"size":296,"mtime":1660387435094,"results":"19","hashOfConfig":"17"},{"size":1705,"mtime":1660391388032,"results":"20","hashOfConfig":"17"},{"size":991,"mtime":1660655850088,"results":"21","hashOfConfig":"17"},{"size":978,"mtime":1660400024473,"results":"22","hashOfConfig":"17"},{"size":5329,"mtime":1660454226426,"results":"23","hashOfConfig":"17"},{"size":3309,"mtime":1660454200923,"results":"24","hashOfConfig":"17"},{"size":812,"mtime":1659877143298,"results":"25","hashOfConfig":"17"},{"size":1591,"mtime":1660394454207,"results":"26","hashOfConfig":"17"},{"size":929,"mtime":1660399622646,"results":"27","hashOfConfig":"17"},{"size":1997,"mtime":1660399928978,"results":"28","hashOfConfig":"17"},{"size":936,"mtime":1660369565791,"results":"29","hashOfConfig":"17"},{"size":188,"mtime":1660211696966,"results":"30","hashOfConfig":"17"},{"size":162,"mtime":1660201920846,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"iukkmy",{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\gotoo\\Documents\\react-app\\tango react node\\tango\\src\\index.js",[],[],"C:\\Users\\gotoo\\Documents\\react-app\\tango react node\\tango\\src\\App.js",["85","86"],[],"import './App.css';\nimport { useEffect, useState } from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport { lightTheme, darkTheme } from './Components/Theme/Themes';\nimport GlobalStyle, {Container} from './Components/Theme/globalStyles';\nimport Header from './Components/Header/Header';\nimport Home from './Components/Home/Home';\nimport Quez from './Components/Quez/Quez';\nimport Menu from './Components/Menu/Menu';\nimport {\n  BrowserRouter,\n  Routes,\n  Route,\n} from 'react-router-dom'\n\nfunction App() {\n  const [status, setStatus] = useState()\n  const [theme, setTheme] = useState('light')\n  const themeToggler =  () => {\n    theme === 'light' ? setTheme('dark') : setTheme('light')\n  }\n\n  return (\n    <ThemeProvider theme={theme === 'light' ? lightTheme : darkTheme}>\n        <GlobalStyle />\n        <BrowserRouter>\n          <Header themeToggler={themeToggler}/>\n          <Routes>\n            <Route path='/' element={<Home setStatus={setStatus} />} />\n            <Route path='/menu/:sectionNum' element={<Menu status={status} setStatus={setStatus}/>} />\n            <Route path='/quez/:sectionNum' element={<Quez status={status} setStatus={setStatus}/>} />\n          </Routes>\n        </BrowserRouter>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","C:\\Users\\gotoo\\Documents\\react-app\\tango react node\\tango\\src\\Components\\Theme\\Themes.js",[],[],"C:\\Users\\gotoo\\Documents\\react-app\\tango react node\\tango\\src\\Components\\Header\\Header.js",["87","88","89","90"],[],"import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Link } from 'react-router-dom'\r\n\r\nfunction Header({ themeToggler }) {\r\n    const changeTheme = () => {\r\n        themeToggler()\r\n    }\r\n\r\n  return (\r\n    <Head className=\"light-theme\">\r\n        <Header_title>\r\n            <TitleLink to={'/'}>TANGO</TitleLink>\r\n\r\n        </Header_title>\r\n        \r\n        <label className=\"light-theme\">\r\n            {/* <Check id=\"btn-mode\" type=\"checkbox\"></Check>  */}\r\n            <div onClick={() => {changeTheme()}}>label</div>\r\n            <div className=\"darkmode-icon\"></div>\r\n        </label>\r\n        <Nav_bar>\r\n            <li className=\"nav-link\"><a href=\"/section1/test\">section1</a></li>\r\n            <li className=\"nav-link\"><a href=\"#\">acount</a></li>\r\n            <li className=\"nav-link\"><a href=\"#\">progress</a></li>\r\n        </Nav_bar>\r\n        <div className=\"nav-btn-wrap\">\r\n            <div className=\"nav-btn light-theme\">\r\n                <span></span>\r\n            </div>\r\n        </div>\r\n    </Head>\r\n  )\r\n}\r\n\r\nconst Head = styled.header`\r\n    background-color: ${({theme})=>theme.header_color};\r\n    border-bottom: white solid 1px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    position: fixed;\r\n    top:0;\r\n    left: 0;\r\n    width: 100%;\r\n\r\n`\r\n\r\nconst Header_title = styled.div`\r\n    line-height: 100px;\r\n    margin-left: 40px;\r\n    color: black;\r\n`\r\n\r\nconst TitleLink = styled(Link)`\r\n    font-size: 35px;\r\n    color: ${({theme})=>theme.text};\r\n    text-decoration: none;\r\n    font-weight: 550;\r\n`\r\n\r\nconst Nav_bar = styled.div`\r\n    display: flex;\r\n    line-height: 100px;\r\n    margin-left: auto;\r\n    display: none;\r\n\r\n`\r\n\r\n\r\nexport default Header","C:\\Users\\gotoo\\Documents\\react-app\\tango react node\\tango\\src\\Components\\Home\\Home.js",[],[],"C:\\Users\\gotoo\\Documents\\react-app\\tango react node\\tango\\src\\Components\\Theme\\globalStyles.js",[],[],"C:\\Users\\gotoo\\Documents\\react-app\\tango react node\\tango\\src\\Components\\Quez\\Quez.js",["91","92","93","94","95","96","97","98","99"],[],"import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport Indicater from '../Indicater'\nimport Rsult from './Result'\nimport { useParams, Link } from 'react-router-dom'\nimport TangoDataService from '../../services/tango.service';\nimport axios from 'axios';\n\nconst Quez = ({ status, setStatus }) => {\n  let params = useParams();\n  const section = params.sectionNum;\n\n  const [cardnum, setCardnum] = useState(0)\n  const [visible, setVisible] = useState(false)\n  const [words, setWords] = useState([\n    // {korean:'의사', meaning:'医者', pronounce:'ウィサ', learning:0, section:1},\n    // {korean:'위치', meaning:'位置', pronounce:'ウィチ', learning:0, section:1},\n    // {korean:'사랑', meaning:'愛', pronounce:'サラン', learning:0, section:1}\n  ]) \n  \n  useEffect(() => {\n    const f = async () => {\n        // check what kind of tango data should be loaded\n        const res = await axios.get(`http://localhost:3001/api/tango/status1/${section}`) \n        console.log(\"progress:\"+res.data.answered+\"%\")  \n        console.log(res.data.answered==100)\n        if(res.data.answered==100){\n          // get words of learning 0\n          const res = await axios.get(`http://localhost:3001/api/tango/getquez/${section}/3`)\n          setWords(res.data) \n          console.log(res.data, \"1\")\n        }else{\n          //get words of learning 3\n          const res = await axios.get(`http://localhost:3001/api/tango/getquez/${section}/0`) \n          setWords(res.data)\n          console.log(res.data, \"2\")\n        }\n    }\n    f()\n  },[])\n  \n  // register words's learning level (1 or 2 or 0)\n  const addAnswer = (id, learning) => {\n    axios.post(`http://localhost:3001/api/tango/answer`,{\n      id,\n      learning,\n    })\n  }\n  \n  var total = 12\n  var tm = 8000;\n  var fn = function(){\n    setVisible(true)\n  };\n  var timeout = setTimeout(fn, tm);\n\n  // get the overall result of section(learning level and progress)\n  const [resultNum, setResult] = useState()\n  const result = () => {\n    axios.get(`http://localhost:3001/api/tango/result/${section}`)\n      .then(response => setResult(response.data))\n    axios.post(`http://localhost:3001/api/tango/markUpdate/${section}`)\n  }\n\n  const num = (id, learning, index) => {\n    setCardnum(cardnum+1);\n    setVisible(false);\n    clearTimeout(timeout);\n    addAnswer(id, learning);\n    // check if quez is ended\n    if(index+1===total){\n      result()\n    }\n  }\n  const show = () => {\n    setVisible(true)\n  }\n\n  return (\n    <div>\n      {words.map((word, index) => (\n      <Card key={index} value={word.learning} cardnum={cardnum} num={index}>\n        <Section_num>Section{word.section}</Section_num>\n        <Progress_bar><Indicater \n          bar_wrap_color='#FFC3C3' \n          bar_color='#FF7171' \n          percentage={(index+1)*100/(total+1)} \n        /></Progress_bar>\n        <Word><p>{word.korean}</p></Word>\n        <Card_hidden vis={visible}>\n          <P1>{word.meaning}</P1>\n          <P2>{word.pronounce}</P2>\n        </Card_hidden>\n        <Button_wrap>\n          <Button onClick={() => num(word.id, '1', index)} color='#87d3ff'>〇</Button>\n          <Button onClick={() => num(word.id, '2', index)} color='#ffe100'  >△</Button>\n          <Button onClick={() => num(word.id, '3', index)} color='#ff9a8f'>✕</Button>\n        </Button_wrap>\n        \n        <Showanswer onClick={show}><Show>答えを見る</Show></Showanswer>\n      </Card>\n      ))}\n      <Card num={total} cardnum={cardnum}>\n        <Rsult />\n      </Card>\n      <Card style={{'zIndex': '0'}}><div>Section{section}</div><div>No imformation</div><Link to=\"/\">Home</Link></Card>\n    </div>\n  )\n}\n\nexport default Quez\n\nconst Card = styled.div`\n  position: fixed;\n  background-color: white;\n   top: 110px;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  margin: auto; \n  z-index: 50;\n  box-shadow: 7px 7px rgb(151, 208, 255);\n  width: 370px;\n  height: 500px;\n  text-align: center;\n  border: 2px solid black;\n  border-radius: 15px;\n  display: ${(props) => props.num===props.cardnum ? 'block' : 'none'};\n`\n\nconst Section_num = styled.div`\n  font-size: 20px;\n  text-align: start;\n  margin-left: 20px;\n  margin-top: 5px;\n`\n\nconst Progress_bar = styled.div`\n  width: 90%;\n  margin: auto;\n`\nconst Word = styled.div`\n  background-color: #FFEAC2;\n  display: inline-block;\n  border-radius: 20px;\n  padding: 0 10px;\n  margin-top: 10px;\n  font-size: 64px;\n  padding: 0 15px;\n  margin: 23px;\n`\n\nconst Card_hidden = styled.div`\n  display: ${props => props.vis ? 'block' : 'none'};\n`\nconst P1 = styled.p`\n  font-size: 32px;\n`\n\nconst P2 = styled.p`\n  font-size: 13px;\n`\n\nconst Button_wrap = styled.div`\n  width: 100%;\n  display: flex;\n  height: 130px;\n  position: absolute;\n  top: 280px;\n\n`\n\nconst Button = styled.button`\n  width: 33%;\n  border: solid 3px ${(props) => props.color};\n  border-radius: 24px;\n  margin: 0 5px;\n  text-align: center;\n  font-size: 50px;\n  background-color: white;\n  cursor: pointer;\n  &:hover{background-color: #eeeeee;}\n  &:active{border: solid 3px grey}\n` \n\nconst Showanswer = styled.div`\n  position: absolute;\n  top: 425px;\n  width: 100%;\n`\n\nconst Show = styled.button`  \n  width: 150px;\n  height: 50px;\n  border: 2px solid grey;\n  border-radius: 15px;\n  display: inline-block;\n  background-color: #dbf9ff;\n  font-size: 20px;\n  cursor: pointer;\n`\n","C:\\Users\\gotoo\\Documents\\react-app\\tango react node\\tango\\src\\Components\\Menu\\Menu.js",["100","101","102","103"],[],"import React, { useEffect } from 'react';\nimport axios from 'axios';\nimport { Container } from '../Theme/globalStyles';\nimport { Link, useParams, useNavigate } from 'react-router-dom';\n// import './Section_menu.css'\nimport Statusbox from '../Statusbox'\nimport styled from 'styled-components';\nimport { ButtonWrap } from '../Theme/globalStyles';\n\nfunction Menu({ status, setStatus }) {\n    let params = useParams();\n    const section = params.sectionNum;\n    const navigate = useNavigate()\n    useEffect(() => {\n        axios.get(`http://localhost:3001/api/tango/result/${section}`)\n            .then(response => {setStatus(response.data)})\n\n      }, [])\n    const move = () => {\n        navigate('/quez/'+section)\n    }\n    const startOver = () => {\n        axios.post(`http://localhost:3001/api/tango/clear/${section}/0/3`)\n        navigate('/quez/'+section)\n    }\n    // const nextMenu = () => {\n    //     navigate('/menu/'+section)\n    // }     \n    const nextMenu = () => {\n        setStatus('')\n        const next = Number(section)+1\n        axios.get(`http://localhost:3001/api/tango/result/${next}`)\n        .then(response => {setStatus(response.data)})\n        navigate('/menu/'+next)\n\n    }\n\n    const beforeMenu = () => {\n        setStatus('')\n        const before = Number(section)-1\n        axios.get(`http://localhost:3001/api/tango/result/${before}`)\n        .then(response => {setStatus(response.data)})\n        navigate('/menu/'+before)\n\n    }\n\n  return (\n    <Container>\n        <div>\n            <Link to={'/'}>←Home</Link>\n            <h2>Section{section}</h2>\n        </div>\n        <BoxesWrap>\n            <S>\n                <Statusbox\n                    text='進捗'\n                    percentage={status ? `${status.answered}` : '0' }\n                    bar_color='blue'\n                    emp='3'\n                />\n            </S>\n            <S>\n                <Statusbox\n                    text='定着度'\n                    percentage={status ? `${status.answerrate}` : '0' }\n                    bar_color='green'\n                    emp='3'\n                />\n            </S>\n        </BoxesWrap>\n        <ButtonWrap color='#ff7575'>\n            <ButtonText onClick={()=>move()}>始める</ButtonText> \n        </ButtonWrap>\n        <ButtonWrap color='#34daff'>\n            <ButtonText onClick={() => startOver()}>1からはじめる</ButtonText> \n        </ButtonWrap>\n        <ButtonWrap color='#96ed8e'></ButtonWrap>\n        <MoveWrap>\n            {section>1 && <Move m='right' onClick={() => beforeMenu()}>Before</Move>}\n            {section<18 && <Move m='left' onClick={() => nextMenu()}>Next</Move>}\n        </MoveWrap>\n    </Container>\n  )\n}\n\nconst ButtonText = styled.p`\n    text-align: center;\n    line-height: 50px;\n    font-size: 30px;\n`\n\nconst S = styled.div`\n    margin-right: 10px;\n`\nconst MenuWrap = styled.div`\n`\nconst BoxesWrap = styled.div`\n    max-width: 400px;\n    margin: auto;\n    display: flex;\n    margin-bottom: 20px;\n`\nconst MoveWrap = styled.div`\ndisplay: flex;\n`\nconst Move = styled.p`\ncursor: pointer;\nfont-size: 20px;\npadding: 5px 15px;\nborder-radius: 5px;\nmargin-left: ${props => props.m=='left' ? 'auto' : '0'};\nmargin-right: ${props => props.m=='right' ? 'auto' : '0'};\n&:hover{\n    background-color: pink;\n}\n`\n\nexport default Menu","C:\\Users\\gotoo\\Documents\\react-app\\tango react node\\tango\\src\\Components\\Indicater.js",["104"],[],"import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst Indicater = ({ percentage, bar_color, bar_wrap_color, height }) => {\r\n  return (\r\n    <Bar_wrap bar_wrap_color={bar_wrap_color} height={height}>\r\n      <Bar percentage={percentage} color={bar_color} height={height}></Bar>\r\n    </Bar_wrap>\r\n\r\n  )\r\n}\r\n\r\nconst Bar_wrap = styled.div`\r\n  height: ${props => props.height ? props.height : '20px'};\r\n  background-color: ${props => props.bar_wrap_color ? props.bar_wrap_color : '#EEEEEE'};\r\n  border-radius: 10px;\r\n  overflow: hidden;\r\n`\r\n\r\nconst Bar = styled.div`\r\n  width: ${(props) => props.percentage+'%'};\r\n  background-color: ${(props) => props.color};\r\n  height: ${props => props.height ? props.height : '20px'};\r\n  border-radius: 10px;\r\n  overflow: hidden;\r\n`\r\n\r\nexport default Indicater","C:\\Users\\gotoo\\Documents\\react-app\\tango react node\\tango\\src\\Components\\Home\\Homestatus.js",["105"],[],"import React from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport Statusbox from '../Statusbox'\nimport styled from 'styled-components'\n \n\nconst Homestatus = ({recent}) => {\n    const navigate = useNavigate()\n    const move = () => {\n        navigate('/menu/'+recent.section)\n    }\n\n    const u = 24\n  return (\n    <div>\n            <h2>Status</h2>\n            <StatusWrap>\n                <S onClick={move}>\n                    <Statusbox \n                        section={recent.section}\n                        text='進捗'\n                        bar_color='#1b91ff'\n                        percentage={recent.answered}\n                        emp='2'\n                    />\n                </S>\n                <S onClick={move}>\n                    <Statusbox \n                        text='正解率'\n                        section={recent.section}\n                        bar_color='#70ba08'\n                        percentage={recent.answerrate}\n                        emp='2'\n                    />\n                </S>\n                <li className=\"status box light-theme\"></li>\n            </StatusWrap>\n            <div className=\"section-title1\">\n                <h2>Section</h2>\n            </div>    \n\n    </div>\n  )\n}\n\nconst StatusWrap = styled.ul`\n    display: flex;\n`\n\nconst S = styled.div`\n    width: 180px;\n    margin-right: 20px;\n    margin-bottom: 13px;\n    border-radius: 15px;\n    background-color: ${({theme})=>theme.content};\n    cursor: pointer;\n    &:hover{\n        background-color: ${({theme})=>theme.hover};\n    }\n`\n\nexport default Homestatus","C:\\Users\\gotoo\\Documents\\react-app\\tango react node\\tango\\src\\Components\\Statusbox.js",[],[],"C:\\Users\\gotoo\\Documents\\react-app\\tango react node\\tango\\src\\Components\\Home\\Section.js",["106","107","108","109","110"],[],"import React from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport Indicater from '../Indicater'\r\nimport styled from 'styled-components'\r\nimport { darkTheme } from '../Theme/Themes'\r\nimport { ButtonWrap } from '../Theme/globalStyles'\r\n\r\nconst Section = ({ status, index, setStatus }) => {\r\n    const navigate = useNavigate()\r\n    const move = (this_status) => {\r\n        navigate('/menu/'+this_status.section)\r\n        setStatus(this_status)\r\n    }\r\n    const sec_color = [\r\n        'rgb(52, 218, 255)',\r\n        'rgb(255, 225, 105)',\r\n        'rgb(255, 135, 135)',\r\n        'rgb(236, 255, 254)',\r\n        'rgb(156, 255, 151)',\r\n        'rgb(120, 255, 221)',\r\n        'rgb(120, 239, 255)',\r\n        'rgb(120, 170, 255)',\r\n        'rgb(208, 120, 255)',\r\n        'rgb(255, 152, 241)',\r\n        'rgb(255, 104, 104)',\r\n        'rgb(255, 148, 103)',\r\n        'rgb(255, 236, 94)',\r\n        'rgb(139, 255, 135)',\r\n        'rgb(155, 255, 222)',\r\n        'rgb(107, 245, 255)',\r\n        'rgb(67, 136, 255)',\r\n        'rgb(123, 86, 255)'\r\n    ]\r\n     \r\n    const color=sec_color[`${index}`]\r\n\r\n    return (\r\n    <ButtonWrap \r\n        onClick={() => move(status)}\r\n        color={color}\r\n    >\r\n        <Section_text>Section{ status.section } : 特に分類なし </Section_text>\r\n        <Section_bars>\r\n            <p>進捗</p>\r\n            <p>{ status.answered }%</p>\r\n            <I_wrap>\r\n                <Indicater height='8px' bar_color='#1b91ff' percentage={status.answered}/>\r\n            </I_wrap>\r\n            <p>暗記</p>\r\n            <p>{ status.answerrate }%</p>\r\n            <I_wrap>\r\n                <Indicater height='8px' bar_color='#70ba08' percentage={status.answerrate}/>\r\n            </I_wrap>\r\n        </Section_bars>\r\n        \r\n    </ButtonWrap>\r\n  )\r\n}\r\n\r\nconst Section_text = styled.p`\r\n`\r\n\r\nconst Section_bars = styled.div`\r\n    display: flex;\r\n`\r\n\r\nconst I_wrap = styled.div`\r\n    width: 25%;\r\n    padding-top: 7px;\r\n    margin: 0 5px;\r\n`\r\n\r\nexport default Section","C:\\Users\\gotoo\\Documents\\react-app\\tango react node\\tango\\src\\Components\\Quez\\Result.js",["111","112"],[],"import React from 'react'\r\n\r\nconst Rsult = () => {\r\n  return (\r\n        <div className=\"card-wrap light-theme last-card\">\r\n          <h2 className=\"last-title-k\">완료!</h2>\r\n          <p className=\"last-title\">完了！</p>\r\n          <p>今回の正解数</p>\r\n              <div className=\"this-ar\">0/0</div> \r\n          <p>全体の正解率</p> \r\n          <div  className=\"bar-wrap ar bar3-wrap\">\r\n              <div id=\"result-bar\" className=\"ar bar3\"></div>\r\n          </div>  \r\n          <p>進捗</p>\r\n          <div  className=\"bar-wrap prg bar3-wrap\">\r\n              <div id=\"result-bar2\" className=\"prg bar3\"></div>\r\n          </div>  \r\n          <div className=\"last-goto light-theme\">       \r\n              <a className=\"lg1\" href=\"#\">recordを見る</a>\r\n              <a className=\"lg1\" href=\"/\">home</a>\r\n              <a className=\"lg2\">続ける</a>\r\n          </div>\r\n        </div>\r\n  )\r\n}\r\n\r\nexport default Rsult","C:\\Users\\gotoo\\Documents\\react-app\\tango react node\\tango\\src\\services\\tango.service.js",[],[],"C:\\Users\\gotoo\\Documents\\react-app\\tango react node\\tango\\src\\http-common.js",[],[],{"ruleId":"113","severity":1,"message":"114","line":2,"column":10,"nodeType":"115","messageId":"116","endLine":2,"endColumn":19},{"ruleId":"113","severity":1,"message":"117","line":5,"column":22,"nodeType":"115","messageId":"116","endLine":5,"endColumn":31},{"ruleId":"118","severity":1,"message":"119","line":12,"column":9,"nodeType":"120","messageId":"121","endLine":12,"endColumn":23},{"ruleId":"118","severity":1,"message":"122","line":22,"column":9,"nodeType":"120","messageId":"121","endLine":22,"endColumn":18},{"ruleId":"123","severity":1,"message":"124","line":24,"column":38,"nodeType":"120","endLine":24,"endColumn":50},{"ruleId":"123","severity":1,"message":"124","line":25,"column":38,"nodeType":"120","endLine":25,"endColumn":50},{"ruleId":"113","severity":1,"message":"125","line":6,"column":8,"nodeType":"115","messageId":"116","endLine":6,"endColumn":24},{"ruleId":"126","severity":1,"message":"127","line":26,"column":38,"nodeType":"128","messageId":"129","endLine":26,"endColumn":40},{"ruleId":"126","severity":1,"message":"127","line":27,"column":29,"nodeType":"128","messageId":"129","endLine":27,"endColumn":31},{"ruleId":"130","severity":1,"message":"131","line":40,"column":5,"nodeType":"132","endLine":40,"endColumn":7,"suggestions":"133"},{"ruleId":"113","severity":1,"message":"134","line":58,"column":10,"nodeType":"115","messageId":"116","endLine":58,"endColumn":19},{"ruleId":"118","severity":1,"message":"135","line":83,"column":9,"nodeType":"120","messageId":"121","endLine":83,"endColumn":22},{"ruleId":"118","severity":1,"message":"136","line":84,"column":9,"nodeType":"120","messageId":"121","endLine":84,"endColumn":23},{"ruleId":"118","severity":1,"message":"137","line":90,"column":9,"nodeType":"120","messageId":"121","endLine":90,"endColumn":36},{"ruleId":"118","severity":1,"message":"138","line":94,"column":9,"nodeType":"120","messageId":"121","endLine":94,"endColumn":22},{"ruleId":"130","severity":1,"message":"139","line":18,"column":10,"nodeType":"132","endLine":18,"endColumn":12,"suggestions":"140"},{"ruleId":"113","severity":1,"message":"141","line":95,"column":7,"nodeType":"115","messageId":"116","endLine":95,"endColumn":15},{"ruleId":"126","severity":1,"message":"127","line":111,"column":32,"nodeType":"128","messageId":"129","endLine":111,"endColumn":34},{"ruleId":"126","severity":1,"message":"127","line":112,"column":33,"nodeType":"128","messageId":"129","endLine":112,"endColumn":35},{"ruleId":"118","severity":1,"message":"142","line":6,"column":5,"nodeType":"120","messageId":"121","endLine":6,"endColumn":63},{"ruleId":"113","severity":1,"message":"143","line":13,"column":11,"nodeType":"115","messageId":"116","endLine":13,"endColumn":12},{"ruleId":"113","severity":1,"message":"144","line":5,"column":10,"nodeType":"115","messageId":"116","endLine":5,"endColumn":19},{"ruleId":"118","severity":1,"message":"145","line":42,"column":9,"nodeType":"120","messageId":"121","endLine":42,"endColumn":23},{"ruleId":"118","severity":1,"message":"146","line":43,"column":9,"nodeType":"120","messageId":"121","endLine":43,"endColumn":23},{"ruleId":"118","severity":1,"message":"147","line":46,"column":13,"nodeType":"120","messageId":"121","endLine":46,"endColumn":21},{"ruleId":"118","severity":1,"message":"147","line":51,"column":13,"nodeType":"120","messageId":"121","endLine":51,"endColumn":21},{"ruleId":"123","severity":1,"message":"124","line":19,"column":15,"nodeType":"120","endLine":19,"endColumn":43},{"ruleId":"123","severity":1,"message":"148","line":21,"column":15,"nodeType":"120","endLine":21,"endColumn":34},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Container' is defined but never used.","react/jsx-pascal-case","Imported JSX component Header_title must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","Imported JSX component Nav_bar must be in PascalCase or SCREAMING_SNAKE_CASE","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'TangoDataService' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'section'. Either include it or remove the dependency array.","ArrayExpression",["149"],"'resultNum' is assigned a value but never used.","Imported JSX component Section_num must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Progress_bar must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Card_hidden must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Button_wrap must be in PascalCase or SCREAMING_SNAKE_CASE","React Hook useEffect has missing dependencies: 'section' and 'setStatus'. Either include them or remove the dependency array. If 'setStatus' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["150"],"'MenuWrap' is assigned a value but never used.","Imported JSX component Bar_wrap must be in PascalCase or SCREAMING_SNAKE_CASE","'u' is assigned a value but never used.","'darkTheme' is defined but never used.","Imported JSX component Section_text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Section_bars must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component I_wrap must be in PascalCase or SCREAMING_SNAKE_CASE","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md",{"desc":"151","fix":"152"},{"desc":"153","fix":"154"},"Update the dependencies array to be: [section]",{"range":"155","text":"156"},"Update the dependencies array to be: [section, setStatus]",{"range":"157","text":"158"},[1542,1544],"[section]",[650,652],"[section, setStatus]"]